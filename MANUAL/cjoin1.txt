Tukubai online command manual

cjoin1

【name】

cjoin1 : Concatenate master file to transaction file (concatenate matching lines only)

[Format]

Usage : cjoin1 [+ng[<fd>]] key=<n> <master> [<tran>]
Version : Fri May 20 21:16:07 JST 2022
Edition: 1

【explanation】

Extracts only lines from tran where the key field specified by key=<n> of tran matches the 
first field (key field) of master, and concatenates and outputs master information. 
Concatenation is performed by inserting and concatenating the contents of master immediately 
after the key field of tran.

If - is specified for master, the standard input is used as the master file. 
If tran is not specified or - is specified, the standard input is the transaction file.

The 1st field of master and the <n>th field of tran can be unaligned, and any number of 
records can have the same value in the key field.

Multiple fields can be specified as keys.
<key> can be specified as:
key=3     The third field in the transaction file
key=3/5   The third, fourth and fifth field in the transaction
          file (the first, second and third field in the master file)
key=4@3   The fourth and third field in the transaction file
          the second and first field in the master file)
key=NF    Last field in the transaction file (first field in the
          master file)
key=NF-3  Third to last field in the transaction file (first field
          in the master file)

Field positions can be specified in the form NF or NF-x using NF, 
which means number of fields in a line.

If there is even one 0 in the key specification, it means that all fields are specified.

In all cases, the master must be sorted for the specified key. 
(The transaction file need not be sorted).

If the "+ng" option is used then matching rows are sent to standard output and 
non-matching rows are sent to the file descriptor specified in <fd>
If <fd> is omitted, non-matching rows are output to standard error.

If the tran keys are aligned, it can be processed by join1 instead of cjoin1. 
cjoin1 can handle misaligned keys in tran, but reading master all into memory can lead to 
memory allocation errors. cjoin1 can be used effectively when master is small and tran is large.

[Example 1] Basic pattern

$ cat master
0000003 Sugiyama______ 26 F
0000005 Sakimura______ 50 F
0000007 Kajikawa______ 42 F

$ cat tran
0000005 82 79 16 21 80
0000001 46 39 8 5 21
0000004 58 71 20 10 6
0000009 60 89 33 18 6
0000003 30 50 71 36 30
0000007 50 2 33 15 62

$ cjoin1 key=1 master tran > ok

$ cat ok
0000005 Sakimura______ 50 F 82 79 16 21 80
0000003 Sugiyama______ 26 F 30 50 71 36 30
0000007 Kajikawa______ 42 F 50 2 33 15 62


[Example 2] How to use the +ng option

$ cjoin1 +ng key=1 master tran > ok 2> ng

$ cat ng
0000001 46 39 8 5 21
0000004 58 71 20 10 6
0000009 60 89 33 18 6


[Example 3] How to use standard input

$ cat tran | cjoin1 +ng key=1 master > ok 2> ng
$ cat tran | cjoin1 +ng key=1 master -> ok 2> ng
$ cat master | cjoin1 +ng key=1 - tran > ok 2> ng


【Related item】

cjoin0, cjoin1, cjoin2, join0, join2, loopj, loopx, up3


last modified: Thu Aug 11 05:37:48 JST 2022
Contact us: uecinfo@usp-lab.com
Copyright (c) 2012-2022 Universal Shell Programming Laboratory All Rights